/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
    
    &mt {
        flavor = "tap-preferred";
        tapping_term_ms = <200>;
    };

    &lt {
        flavor = "tap-preferred";
        quick-tap-ms = <0>;
        tapping_term_ms = <175>;
    };

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <225>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ltt: layer_tap_tp {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAPTP";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        lth: layer_tap_hp {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAPHP";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };

        ltcw: layer_tap_capsword {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAPCW";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&caps_word>;
        };

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };

        skmt: sticky_key_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "STICKY_KEY_MOD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <225>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&skq>;
        };

        mm_spacent: mm_spacent { \
            compatible = "zmk,behavior-mod-morph"; \
            label = "SPACE_ENTER"; \
            #binding-cells = <0>; \
            bindings = <&kp SPC>, <&kp RET>; \
            mods = <(MOD_LSFT|MOD_RSFT)>; \
            masked_mods = <(MOD_LSFT|MOD_RSFT)>; \
        };

        mm_bspcdel: mm_bspcdel { \
            compatible = "zmk,behavior-mod-morph"; \
            label = "BSPC_DEL"; \
            #binding-cells = <0>; \
            bindings = <&kp BSPC>, <&kp DEL>; \
            mods = <(MOD_LSFT|MOD_RSFT)>; \
            masked_mods = <(MOD_LSFT|MOD_RSFT)>; \
        };

        mm_thumbbd: mm_thumbbd { \
            compatible = "zmk,behavior-mod-morph"; \
            label = "THUMB_BD"; \
            #binding-cells = <0>; \
            bindings = <&lth 2 BSPC>, <&kp DEL>; \
            mods = <(MOD_LSFT|MOD_RSFT)>; \
            masked_mods = <(MOD_LSFT|MOD_RSFT)>; \
        };

        paren: paren {
            label = "Parenthesis";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <30>;
            bindings
                = <&macro_tap &kp LPAR &kp RPAR &kp LEFT>
                ;
        };

        curb: curb {
            label = "Curly Braces";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <30>;
            bindings
                = <&macro_tap &kp LBRC &kp RBRC &kp LEFT>
                ;
        };

        bracket: bracket {
            label = "Brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <30>;
            bindings
                = <&macro_tap &kp LBKT &kp RBKT &kp LEFT>
                ;
        };

        tdpar: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&paren>;
        };

        tdcurb: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&curb>;
        };

        tdbrkt: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&bracket>;
        };
    };

        macros {
        tips: tips {
            label = "TIPS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <30>;
            bindings
                = <&macro_tap &kp T &kp R &kp U &kp E &kp I &kp P &kp S &kp O &kp L &kp U &kp T &kp I &kp O &kp N &kp S &kp DOT &kp C &kp O &kp M>
                ;
          };
        };


        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q       &kp W      &kp E       &kp R       &kp T 			                    &kp Y       &kp U       &kp I       &kp O       &kp P 
		&hm LCTRL A &hm LALT S &hm LSHFT D &hm LGUI F  &kp G                          &kp H       &hm RGUI J  &hm RSHFT K &hm RALT L  &hm RCTRL QUOT
		&ltt 3 Z    &kp X      &kp C       &kp V       &kp B			                    &kp N       &kp M       &kp CMMA    &kp DOT     &kp SLASH
          				                   &lth 2 TAB   &ltcw 1                 &mm_thumbbd &mm_spacent
		>;
		};

       		numpad_layer {
		bindings = <
		&tdpar       &kp RPAR         &tdcurb        &kp RBRC      &tips 			     &kp MINUS     &kp N7  &kp N8 &kp N9 &kp SLASH
		&hm LCTRL AT &hm LALT BSLH    &hm LSFT UNDER &hm LGUI PIPE &trans          &kp MINUS     &kp N4  &kp N5 &kp N6 &kp SEMICOLON
		&tdbrkt      &kp RBKT         &trans         &trans        &trans			     &kp EQUAL     &kp N1  &kp N2 &kp N3 &kp RET
          				                          &trans       &trans                &kp DOT       &kp N0 
		>;
		};
		
		    navigation_layer {
		bindings = <
		&kp ESC  &kp GRAVE &kp TILDE  &kp BSLH &tips    			            &trans   &trans   &trans &trans    &trans 
		&kp AT   &kp BSLH  &kp UNDER  &kp PIPE &kp SCLN 			            &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans
		&kp LBRC &kp RBRC  &kp LBKT   &kp RBKT &kp BSLH  			            &trans   &trans   &trans &trans    &trans
					                  &trans   &trans                      		&trans &trans 
		>;
		};
		
		    function_layer {
		bindings = <
		&bt BT_CLR   &trans              &trans       &trans       &bootloader        &bootloader &kp F7 &kp F8 &kp F9 &kp F10 
		&kp CAPS     &kp LS(LC(K_POWER)) &trans       &trans       &trans             &trans      &kp F4 &kp F5 &kp F6 &kp F11
		&bt BT_SEL 0 &bt BT_SEL 1        &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &trans      &kp F1 &kp F2 &kp F3 &kp F12
					                                  &trans       &trans             &trans      &trans 
		>;
		};
        
	};
};
