/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

        &mt {
            flavor = "tap-preferred";
            tapping_term_ms = <200>;
        };

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

    };

  {
    combos {
        compatible = "zmk,combos";
        combo_lbl {
            timeout-ms = <50>;
            key-positions = <0 4 24>;
            bindings = <&bootloader>;
        };

        combo_rbl {
            timeout-ms = <50>;
            key-positions = <5 9 25>;
            bindings = <&bootloader>; 
        };
    };
};

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q      &kp W       &kp E       &kp R       &kp T 			     &kp Y       &kp U       &kp I       &kp O       &kp P 
		&kp A      &hm LSHFT S &hm LCTRL D &hm LGUI F  &kp G                 &kp H       &hm RGUI J  &hm RCTRL K &hm RSHFT L &kp QUOT
		&kp Z      &kp X       &kp C       &hm LALT V  &kp B			     &kp N       &hm RALT M  &kp CMMA    &kp DOT     &kp SLASH
          				                   &lt 1 TAB   &mt LSHFT BSPC        &lt 2 RET   &lt 3 SPC 
		>;
		};

       		numpad_layer {
		bindings = <
		&kp TAB     &kp LS(LC(TAB)) &kp UP        &kp LC(TAB)  &trans 			     &kp MINUS     &kp N7       &kp N8       &kp N9       &kp SLASH
		&kp BSPC    &kp LEFT        &kp DOWN      &kp RIGHT    &trans                &kp COLON     &hm RGUI N4  &hm RCTRL N5 &hm RSHFT N6 &kp DOT
		&trans      &trans          &kp LG(GRAVE) &trans       &trans			     &kp EQUAL     &hm RALT N1  &kp N2       &kp N3       &kp RET
          				                          &trans       &trans                &mt LSHFT SPC &kp N0 
		>;
		};
		
		    symbol_layer {
		bindings = <
		&kp ESC  &kp GRAVE &kp TILDE  &kp BSLH &trans    			&trans &trans        &trans    &trans    &trans 
		&kp AT   &kp BSLH  &kp UNDER  &kp PIPE &kp SCLN 			&trans &kp RGUI      &kp RCTRL &kp RSHFT &trans
		&kp LBRC &kp RBRC  &kp LBKT   &kp RBKT &kp BSLH    			&trans &hm RALT LPAR &kp RPAR  &kp LT    &kp GT
					                  &trans   &mt LSHFT SPC  		&trans &trans 
		>;
		};
		
		    function_layer {
		bindings = <
		&trans      &trans                &trans     &trans &trans        &trans &kp F7 &kp F8 &kp F9 &kp F10 
		&kp CAPS    &kp LS(LC(K_POWER))   &trans     &trans &trans        &trans &kp F4 &kp F5 &kp F6 &kp F11
		&bt BT_PRV  &bt BT_CLR            &bt BT_NXT &trans &trans        &trans &kp F1 &kp F2 &kp F3 &kp F12
					                                 &trans &trans        &trans    &trans 
		>;
		};
        
	};
};
